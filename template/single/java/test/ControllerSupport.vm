#set ( $package = "${topPackage}${table.pkg}" )
package ${package}.service.impl;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import java.io.IOException;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;

import com.evergrande.common.utils.JsonUtil;
import com.evergrande.pm.api.util.JsonClientUtil;
import com.fasterxml.jackson.databind.node.ObjectNode;
import com.evergrande.api.aop.loginCheck.LoginRequired;

import ${package}.entity.${table.JavaName}EntitySaveParam;
import ${package}.entity.${table.JavaName}EntityQueryParam;
import ${package}.entity.${table.JavaName}EntityUpdateParam;
import ${package}.entity.${table.JavaName}EntityDeleteParam;



 /**
 * @author chenzx
 * @date [$now]
 * @desc 
 */
 
 
public class ${table.JavaName}HandlerTest {


	private String reqUrl;
	private String token;
    

	@Before
	public void setUp() throws Exception {

		token = "9xGCDFPyC/GO2Mt8+IAbIjRz3soFLg5+zanIbpOjLZo=";

		// local
		reqUrl = "http://localhost:20407";
		//dev
		//reqUrl = "http://dev.property-api.hd";

	}



    @After
    public void after() {

    }
    


	  @Test
	  public void testSave() throws Exception {
		// 参数节点
		ObjectNode paramNode = JsonUtil.createObjectNode();
		
		${table.JavaName}EntitySaveParam ${strings.lowercaseFirstLetter($table.JavaName)}EntitySaveParam = new ${table.JavaName}EntitySaveParam();
		
		paramNode.putPOJO("${strings.lowercaseFirstLetter($table.JavaName)}EntitySaveParam", ${strings.lowercaseFirstLetter($table.JavaName)}EntitySaveParam);
		 
		String result = JsonClientUtil.request(reqUrl + "/${strings.lowercaseFirstLetter($table.JavaName)}/save", paramNode, token,LoginRequired.LoginType.NORMAL);
		System.out.println("result:"+result);
	}


	  @Test
  	  public void testSaveList() throws Exception{
  	  		// 参数节点
		ObjectNode paramNode = JsonUtil.createObjectNode();
		
		${table.JavaName}EntitySaveParam ${strings.lowercaseFirstLetter($table.JavaName)}EntitySaveParam = new ${table.JavaName}EntitySaveParam();
		
		${table.JavaName}EntitySaveParam ${strings.lowercaseFirstLetter($table.JavaName)}EntitySaveParam2 = new ${table.JavaName}EntitySaveParam();
		
		List<${table.JavaName}EntitySaveParam> list${table.JavaName}EntitySaveParam = new ArrayList<${table.JavaName}EntitySaveParam>();
		
		list${table.JavaName}EntitySaveParam.add(${strings.lowercaseFirstLetter($table.JavaName)}EntitySaveParam);
		list${table.JavaName}EntitySaveParam.add(${strings.lowercaseFirstLetter($table.JavaName)}EntitySaveParam2);
		
		paramNode.putPOJO("list${table.JavaName}EntitySaveParam", list${table.JavaName}EntitySaveParam);
		 
		String result = JsonClientUtil.request(reqUrl + "/${strings.lowercaseFirstLetter($table.JavaName)}/saveList", paramNode, token,LoginRequired.LoginType.NORMAL);
  	  	System.out.println("result:"+result);
 	  }
 
 
 	  @Test
	  public void testQueryDetail() throws Exception{
	  	  	  		// 参数节点
		ObjectNode paramNode = JsonUtil.createObjectNode();
		
		${table.JavaName}EntityQueryParam ${strings.lowercaseFirstLetter($table.JavaName)}EntityQueryParam = new ${table.JavaName}EntityQueryParam();
		
		paramNode.putPOJO("${strings.lowercaseFirstLetter($table.JavaName)}EntityQueryParam", ${strings.lowercaseFirstLetter($table.JavaName)}EntityQueryParam);
		
		String result = JsonClientUtil.request(reqUrl + "/${strings.lowercaseFirstLetter($table.JavaName)}/queryDetail", paramNode, token,LoginRequired.LoginType.NORMAL);
		System.out.println("result:"+result);
	  }
	  

	  @Test
	  public void testQueryList() throws Exception{
	  	// 参数节点
		ObjectNode paramNode = JsonUtil.createObjectNode();
		
		${table.JavaName}EntityQueryParam ${strings.lowercaseFirstLetter($table.JavaName)}EntityQueryParam = new ${table.JavaName}EntityQueryParam();
		
		
		paramNode.putPOJO("${strings.lowercaseFirstLetter($table.JavaName)}EntityQueryParam", ${strings.lowercaseFirstLetter($table.JavaName)}EntityQueryParam);
		
	  	String result = JsonClientUtil.request(reqUrl + "/${strings.lowercaseFirstLetter($table.JavaName)}/queryList", paramNode, token,LoginRequired.LoginType.NORMAL);
	  	System.out.println("result:"+result);
	  }
	  
	  
	  @Test
	  public void testQueryListByPage() throws Exception{
	  	ObjectNode node = JsonUtil.createObjectNode();
	  	node.put("pageSize",10);
	  	node.put("currentPage", 1);
	  	
	  	//参数过滤
	  	node.put("",);
	  	
	  	ObjectNode pNode = JsonUtil.createObjectNode();
        pNode.put("param",JsonUtil.toJsonString(node));
        String request = JsonClientUtil.request(reqUrl + "/${strings.lowercaseFirstLetter($table.JavaName)}/queryList", pNode, token, LoginRequired.LoginType.MANAGER);
       	System.out.println("result:"+result);
            
	  }
	  
	  
  
  
 
	  @Test
	  public void testQueryCount() throws Exception{
	  	ObjectNode paramNode = JsonUtil.createObjectNode();
		
		${table.JavaName}EntityQueryParam ${strings.lowercaseFirstLetter($table.JavaName)}EntityQueryParam = new ${table.JavaName}EntityQueryParam();
		
		paramNode.putPOJO("${strings.lowercaseFirstLetter($table.JavaName)}EntityQueryParam", ${strings.lowercaseFirstLetter($table.JavaName)}EntityQueryParam);
		
		String result = JsonClientUtil.request(reqUrl + "/${strings.lowercaseFirstLetter($table.JavaName)}/queryCount", paramNode, token,LoginRequired.LoginType.NORMAL);
	     System.out.println("result:"+result);
	  	
	  }
  

 	 @Test
	 public void testUpdate() throws Exception{
	 	ObjectNode paramNode = JsonUtil.createObjectNode();
		
		${table.JavaName}EntityUpdateParam ${strings.lowercaseFirstLetter($table.JavaName)}EntityUpdateParam = new ${table.JavaName}EntityUpdateParam();
		//设置主键更新
		
		paramNode.putPOJO("${strings.lowercaseFirstLetter($table.JavaName)}EntityUpdateParam", ${strings.lowercaseFirstLetter($table.JavaName)}EntityUpdateParam);
		
		String result = JsonClientUtil.request(reqUrl + "/${strings.lowercaseFirstLetter($table.JavaName)}/update", paramNode, token,LoginRequired.LoginType.NORMAL);
	    System.out.println("result:"+result);
		
	 }
	 
	 
	 
	 @Test
	 public void testDelete() throws Exception{
	 	ObjectNode paramNode = JsonUtil.createObjectNode();
		
		${table.JavaName}EntityDeleteParam ${strings.lowercaseFirstLetter($table.JavaName)}EntityDeleteParam = new ${table.JavaName}EntityDeleteParam();
		//设置主键更新
		
		paramNode.putPOJO("${strings.lowercaseFirstLetter($table.JavaName)}EntityDeleteParam", ${strings.lowercaseFirstLetter($table.JavaName)}EntityDeleteParam);
		
		String result = JsonClientUtil.request(reqUrl + "/${strings.lowercaseFirstLetter($table.JavaName)}/delete", paramNode, token,LoginRequired.LoginType.NORMAL);
	    System.out.println("result:"+result);
	 	
	 
	 }
	 
	 
	 
	 
  

 
}